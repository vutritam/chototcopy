import React, { useEffect, useState } from 'react'
import { Breadcrumb, Layout, Space, Spin, theme } from 'antd'
import { SideBar } from '../siderBar/siderBar'
const { Header, Content, Footer } = Layout
import AvatarComponent from '../avatar/avatar'
import { useRouter } from 'next/router'
import ComfirmLocationOrder from '../confirmLocation/confirmLocation'
import Head from 'next/head'
import { itemsAdmin, itemsEmployee, itemsOrder } from '../jsonData/menuData'
import { BreadcrumbItem } from '../common/breadcrumb'

type MyComponentProps = {
	children: React.ReactNode
	rolesAccess: string[]
}
const MasterLayout: React.FC<MyComponentProps> = ({ children, rolesAccess }: MyComponentProps) => {
	const router = useRouter()
	const [collapsed, setCollapsed] = useState(false)
	const [triggerWidthSiderBar, setTriggerWidth] = useState(0)
	const [openShowConfirmLocation, setShowConfirmLocation] = useState(false)
	const [selectedItemKey, setSelectedItemKey] = useState(null)

	const [loading, setLoading] = useState(false)

	//message redux store
	const {
		token: { colorBgContainer },
	} = theme.useToken()
	const isOrderPage = router.pathname.startsWith('/order')
	useEffect(() => {
		isOrderPage ? setShowConfirmLocation(true) : setShowConfirmLocation(false)
	}, [router.asPath])

	useEffect(() => {
		if (collapsed) {
			setTriggerWidth(80)
		}
	}, [collapsed])
	const handleClickCollapse = (value: boolean) => {
		setCollapsed(value)
	}
	const renderSiderBar = (rolesAccess: string[]) => {
		switch (rolesAccess[0]) {
			case 'admin':
				return itemsAdmin
			case 'employee':
				return itemsEmployee
			case 'order':
				return itemsOrder
			default:
				return
		}
	}

	const handleMenuClick = (item) => {
		if (item) {
			sessionStorage.setItem('clickItemChecked', item.key)
		}
	}
	return (
		<>
			<Head>
				<title>Gold coffee</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link
					rel="icon"
					type="image/png"
					href={`${process.env.NEXT_PUBLIC_HOST_CLIENT}/images/Logo.png`}
				/>
				<meta
					property="og:image"
					content={`${process.env.NEXT_PUBLIC_HOST_CLIENT}/images/Logo.png`}
				/>
			</Head>
			<Layout className={`layout-container  ${collapsed ? 'active-collapse' : ''}`}>
				{!openShowConfirmLocation ? (
					<ComfirmLocationOrder open={openShowConfirmLocation} tittle="Xác nhận vị trí!" />
				) : (
					''
				)}
				{
					<div className="show-desktop-menu">
						<SideBar
							collapsed={collapsed}
							handleClickCollapse={handleClickCollapse}
							items={renderSiderBar(rolesAccess)}
							selectedItemKey={selectedItemKey}
							handleMenuClick={handleMenuClick}
						/>
					</div>
				}

				<Layout className="site-layout">
					<Header
						style={{
							paddingRight: 10,
							background: 'white',
							position: 'sticky',
							top: 0,
							zIndex: 1,
							width: '100%',
							display: 'flex',
							justifyContent: !collapsed ? 'flex-end' : 'space-between',
							paddingInline: collapsed ? '0px' : '',
						}}
					>
						{collapsed ? (
							<div>
								<b style={{ color: 'blue' }}>GOLD COFFEE</b>
							</div>
						) : null}

						<AvatarComponent />
					</Header>
					<Content style={{ margin: '0 16px' }}>
						<BreadcrumbItem />

						<div
							style={{
								position: 'relative',
								padding: 24,
								background: colorBgContainer,
							}}
						>
							{children}
						</div>
					</Content>
					<Footer style={{ textAlign: 'center' }}>Bản quyền thuộc vũ trí tâm</Footer>
				</Layout>
			</Layout>
		</>
	)
}

export default MasterLayout
